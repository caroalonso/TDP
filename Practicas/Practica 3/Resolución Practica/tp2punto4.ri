programa Fiscalizacion

procesos
  {Proceso para juntar todas las flores de una esquina}
  proceso juntarflores (ES flores: numero)
  comenzar
    mientras (HayFlorEnLaEsquina)
      tomarflor
      flores:=flores+1
  fin  

  {Proceso para juntar todos los papeles de una esquina}
  proceso juntarPapeles (ES papeles: numero)
  comenzar
    mientras (HayPapelEnLaEsquina)
      tomarPapel
      papeles:=papeles+1
  fin  

  {Proceso para limpiar una esquina de flores y papeles}
  proceso limpiarEsquina (ES flores: numero; ES papeles: numero)
  comenzar
    si (HayFlorEnLaEsquina)
      juntarflores(flores)
    si (HayPapelEnLaEsquina)
      juntarPapeles(papeles)
  fin

  {Proceso para asignar ID a cada robot recolector}
  proceso identificarRobots
  comenzar
    EnviarMensaje(1, r1)
    EnviarMensaje(2, r2)
    EnviarMensaje(3, r3)
    EnviarMensaje(4, r4)
  fin

  {Proceso para avisar a un robot que puede ingresar}
  proceso avisarRobot (E ID: numero; E ok: boolean)
  comenzar
    segun (ID)
      caso 1: EnviarMensaje(ok, r1)
      caso 2: EnviarMensaje(ok, r2)
      caso 3: EnviarMensaje(ok, r3)
      caso 4: EnviarMensaje(ok, r4)
    fsegun
  fin

  {Proceso para avisar a todos los robots que la fiscalizaci칩n termin칩}
  proceso avisarfin (E ok: boolean)
  comenzar
    EnviarMensaje(ok, r1)
    EnviarMensaje(ok, r2)
    EnviarMensaje(ok, r3)
    EnviarMensaje(ok, r4)
  fin

  {Proceso para determinar cu치l robot ha recolectado m치s objetos }
  proceso esMaximo (E cant: numero; ES cantMax: numero; E ID: numero; ES idMax: numero)
  comenzar
    si (cant > cantMax)
      cantMax := cant
      idMax := ID
  fin

areas
  cuadrante: AreaPC(25,25,75,75)
  areaF: AreaP(1,1,1,1)
  area1: AreaP(25,1,25,1)
  area2: AreaP(30,1,30,1)
  area3: AreaP(35,1,35,1)
  area4: AreaP(40,1,40,1)

robots 
  robot recolector
  variables
    papeles, flores, total: numero
    ID: numero
    AvInicio, CaInicio, AvFin, CaFin: numero
    ok, gane: boolean
  comenzar
    papeles := 0
    flores := 0
    AvInicio := PosAv
    CaInicio := PosCa
    RecibirMensaje(ID, rf)
    mientras (ok) 
      Random(AvFin, 25, 75)
      Random(CaFin, 25, 75)
      Pos(AvFin, CaFin)
      limpiarEsquina(flores, papeles)
      Pos(AvInicio, CaInicio)
      EnviarMensaje(ok, rf)
      RecibirMensaje(ok, rf) 
    total := flores + papeles
    EnviarMensaje(ID, rf)
    EnviarMensaje(total, rf) 
    RecibirMensaje(gane, rf)
    si (gane)
      Pos(50,50)     
  fin
  
  robot fiscalizador
  variables
    ID, id_final: numero
    ok: boolean
    cantr1, cantr2, cantr3, cantr4: numero
    cantMax, idMax: numero
  comenzar
    idMax := -1
    cantMax := -1
    ok := V
    identificarRobots
    repetir 10
      Random(ID, 1, 4)
      avisarRobot(ID, ok)
      RecibirMensaje(ok, *)
    ok := F
    avisarfin(ok)
    repetir 4
      RecibirMensaje(id_final, *)   
      segun (id_final)
        caso 1: RecibirMensaje(cantr1, r1)
                esMaximo(cantr1, cantMax, id_final, idMax)
        caso 2: RecibirMensaje(cantr2, r2)
                esMaximo(cantr2, cantMax, id_final, idMax)
        caso 3: RecibirMensaje(cantr3, r3)
                esMaximo(cantr3, cantMax, id_final, idMax)
        caso 4: RecibirMensaje(cantr4, r4)
                esMaximo(cantr4, cantMax, id_final, idMax)
      fsegun
    ID := 1
    repetir 4
      si (ID = idMax)
        ok := V
      sino
        ok := F
      avisarRobot(ID, ok)
      ID := ID + 1   
  fin

variables 
  r1, r2, r3, r4: recolector
  rf: fiscalizador
comenzar 
  AsignarArea(r1, area1)
  AsignarArea(r1, cuadrante)
  AsignarArea(r2, area2)
  AsignarArea(r2, cuadrante)
  AsignarArea(r3, area3)
  AsignarArea(r3, cuadrante)
  AsignarArea(r4, area4)
  AsignarArea(r4, cuadrante)
  AsignarArea(rf, areaF)
  Iniciar(rf, 1, 1)
  Iniciar(r1, 25, 1)
  Iniciar(r2, 30, 1)
  Iniciar(r3, 35, 1)
  Iniciar(r4, 40, 1)
fin
